<?xml version="1.0" encoding="utf-8"?>
<!--EXTERNAL_PROPERTIES: CCNetLabel;branch.build.number;usdDatabaseVersion;svn.username;svn.password-->
<project name="Tarantino" default="local" xmlns="http://nant.sf.net/release/0.85-rc4/nant.xsd">

	<!-- NAnt settings -->
	<property name="nant.settings.currentframework" value="net-2.0" />

	<!-- Version settings -->
	<property name="company" value="Tarantino"/>
	<property name="project" value="Tarantino"/>
	<property name="copyright" value="${company}, ${datetime::get-year(datetime::now())}"/>

	<!-- Compilation settings -->
	<property name="project.config" value="release" />
	<property name="test.dir" value="test" />

	<!-- Testing settings -->
	<property name="test.types" value="Unit,Integration" />
	<property name="nunit.console" value="lib\NUnit\2.4.3\nunit-console.exe" />
	<property name="ncover.console" value="lib\NCover\1.5.8\ncover.console.exe" />

	<!-- Package settings -->
	<property name="svn.exe" value="lib\subversion\1.4.3\svn.exe" />
	<property name="svn.args" value="--username ${svn.username} --password ${svn.password} --non-interactive" />
	<property name="package.dir" value="package" />

	<!-- External targets -->
	<target name="local" depends="rebuildAllDatabases, version, compile, move, test"/>
	<target name="localWithCoverage" depends="rebuildAllDatabases, version, compile, move, coverage"/>
	<target name="localWithPackage" depends="rebuildAllDatabases, rebuildDeployerDatabase, version, compile, move, test, package"/>

	<target name="compile">
		<exec program="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" commandline="src\${project}.sln /t:Clean /p:Configuration=${project.config} /v:q" workingdir="." />
		<exec program="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" commandline="src\${project}.sln /t:Rebuild /p:Configuration=${project.config} /v:q" workingdir="." />
	</target>

	<target name="move">
		<!-- clear out existing testing directory -->
		<delete dir="${test.dir}" failonerror="false" />

		<!-- copy test assemblies -->
		<foreach item="String" in="${test.types}" delim="," property="test.type">
			<property name="assembly" value="${project}.${test.type}Tests" />

			<copy todir="${test.dir}" verbose="false">
				<fileset basedir="src/${assembly}/bin/${project.config}">
					<exclude name="*.xml"/>
					<include name="**"/>
				</fileset>
			</copy>
		</foreach>

		<copy todir="${test.dir}" verbose="false" overwrite="true">
			<fileset basedir="src/Tarantino.Deployer.IntegrationTests/bin/${project.config}">
				<exclude name="*.xml"/>
				<include name="**"/>
			</fileset>
		</copy>
	</target>

	<target name="test">
		<foreach item="String" in="${test.types}" delim="," property="test.type">
			<property name="assembly" value="${test.dir}\${project}.${test.type}Tests.dll" />

			<echo message="Testing: ${assembly}" />

			<nunit2 failonerror="true" verbose="true">
				<formatter type="Plain" />
				<test assemblyname="${assembly}" />
			</nunit2>
		</foreach>

		<nunit2 failonerror="true" verbose="true">
			<formatter type="Plain" />
			<test assemblyname="${test.dir}\Tarantino.Deployer.IntegrationTests.dll" />
		</nunit2>
	</target>

	<target name="coverage">
		<foreach item="String" in="${test.types}" delim="," property="test.type">
			<property name="assembly" value="${project}.${test.type}Tests" />
			<exec program="${ncover.console}" commandline="//reg //w ${test.dir} //x ${test.dir}\${assembly}.Coverage.xml //v ${nunit.console} ${assembly}.dll" workingdir="." />
		</foreach>

		<exec program="${ncover.console}" commandline="//reg //w ${test.dir} //x ${test.dir}\Tarantino.Deployer.IntegrationTests.Coverage.xml //v ${nunit.console} Tarantino.Deployer.IntegrationTests.dll" workingdir="." />
	</target>

	<target name="version">
		<exec program="${svn.exe}" commandline="info LatestVersion ${svn.args} --xml --revision HEAD" output="svninfo.xml" append="false" verbose="false"/>
		<xmlpeek file="svninfo.xml" xpath="/info/entry/@revision" property="revision"/>

		<property name="revision" value="${int::parse(revision) + 1}"/>

		<property name="project.fullversion" value="1.0.${revision}.0"/>

		<echo message="MARKING THIS BUILD AS VERSION ${project.fullversion}" />
		<delete file="src/CommonAssemblyInfo.cs" failonerror="false"/>
		<asminfo output="src/CommonAssemblyInfo.cs" language="CSharp">
			<imports>
				<import namespace="System" />
				<import namespace="System.Reflection" />
				<import namespace="System.Runtime.InteropServices" />
			</imports>
			<attributes>
				<attribute type="ComVisibleAttribute" value="false" />
				<attribute type="AssemblyVersionAttribute" value="${project.fullversion}" />
				<attribute type="AssemblyFileVersionAttribute" value="${project.fullversion}" />
				<attribute type="AssemblyCopyrightAttribute" value="${copyright}" />
				<attribute type="AssemblyProductAttribute" value="${project}" />
				<attribute type="AssemblyCompanyAttribute" value="${company}" />
				<attribute type="AssemblyConfigurationAttribute" value="${project.config}" />
				<attribute type="AssemblyInformationalVersionAttribute" value="${project.fullversion}" />
			</attributes>
			<references>
				<include name="System.dll" />
			</references>
		</asminfo>
	</target>

	<target name="package" depends="version">
		<delete dir="${package.dir}" failonerror="false" />

		<copy todir="${package.dir}\NAnt" verbose="false">
			<fileset basedir="lib\NAnt">
				<include name="**" />
			</fileset>
		</copy>

		<copy todir="${package.dir}" verbose="false">
			<fileset basedir="src\Tarantino.Commons.Core\bin\${project.config}">
				<include name="*.dll" />
			</fileset>
		</copy>

		<copy todir="${package.dir}" verbose="false">
			<fileset basedir="src\Tarantino.Commons.Infrastructure\bin\${project.config}">
				<include name="*.dll" />
			</fileset>
		</copy>

		<copy todir="${package.dir}" verbose="false">
			<fileset basedir="src\Tarantino.Commons.Service\bin\${project.config}">
				<include name="*.dll" />
				<include name="*.exe" />
				<include name="Tarantino.Commons.Service.exe.config" />
			</fileset>
		</copy>

		<copy todir="${package.dir}" verbose="false">
			<fileset basedir="src\Tarantino.Commons.UI.Controls\bin\${project.config}">
				<include name="*.dll" />
			</fileset>
		</copy>

		<copy todir="${package.dir}" verbose="false">
			<fileset basedir="src\Tarantino.DatabaseManager.NAntTasks\bin\${project.config}">
				<include name="*.dll" />
			</fileset>
		</copy>

		<copy todir="${package.dir}" verbose="false">
			<fileset basedir="src\Tarantino.Deployer.UI\bin\${project.config}">
				<include name="*.dll" />
				<include name="*.exe" />
				<include name="*.build" />
				<include name="*.bat" />
				<include name="Subversion\**" />
				<include name="Tarantino.Deployer.UI.exe.config" />
				<include name="StructureMap.config" />
			</fileset>
		</copy>

		<copy todir="${package.dir}\Tarantino.Commons.Database" verbose="false">
			<fileset basedir="src\Tarantino.Commons.Database">
				<include name="**\*.sql" />
			</fileset>
		</copy>

		<copy todir="${package.dir}\Tarantino.Commons.Database" verbose="false">
			<fileset basedir="src\Tarantino.DatabaseManager.UI\bin\${project.config}">
				<include name="*.dll" />
				<include name="*.exe" />
				<include name="*.build" />
				<include name="Tarantino.DatabaseManager.UI.exe.config" />
			</fileset>
		</copy>

		<copy todir="${package.dir}\Tarantino.Deployer.Database" verbose="false">
			<fileset basedir="src\Tarantino.Deployer.Database">
				<include name="**\*.sql" />
			</fileset>
		</copy>

		<copy todir="${package.dir}\Tarantino.Deployer.Database" verbose="false">
			<fileset basedir="src\Tarantino.DatabaseManager.UI\bin\${project.config}">
				<include name="*.dll" />
				<include name="*.exe" />
				<include name="*.build" />
				<include name="Tarantino.DatabaseManager.UI.exe.config" />
			</fileset>
		</copy>

		<property name="app.settings.path" value="/configuration/appSettings" />

		<property name="commonsDatabaseManagerConfig" value="${package.dir}\Tarantino.Commons.Database\Tarantino.DatabaseManager.UI.exe.config"/>

		<xmlpoke
			file="${commonsDatabaseManagerConfig}"
			xpath="${app.settings.path}/add[@key='Server']/@value"
			value="." />

		<xmlpoke
			file="${commonsDatabaseManagerConfig}"
			xpath="${app.settings.path}/add[@key='Database']/@value"
			value="TarantinoCommons" />

		<xmlpoke
			file="${commonsDatabaseManagerConfig}"
			xpath="${app.settings.path}/add[@key='Username']/@value"
			value="" />

		<xmlpoke
			file="${commonsDatabaseManagerConfig}"
			xpath="${app.settings.path}/add[@key='Password']/@value"
			value="" />

		<xmlpoke
			file="${commonsDatabaseManagerConfig}"
			xpath="${app.settings.path}/add[@key='IntegratedSecurity']/@value"
			value="true" />

		<xmlpoke
			file="${commonsDatabaseManagerConfig}"
			xpath="${app.settings.path}/add[@key='ScriptFolder']/@value"
			value="." />

		<xmlpoke
			file="${commonsDatabaseManagerConfig}"
			xpath="${app.settings.path}/add[@key='NAntFolder']/@value"
			value="..\NAnt" />

		<property name="deployerDatabaseManagerConfig" value="${package.dir}\Tarantino.Deployer.Database\Tarantino.DatabaseManager.UI.exe.config"/>

		<xmlpoke
			file="${deployerDatabaseManagerConfig}"
			xpath="${app.settings.path}/add[@key='Server']/@value"
			value="." />

		<xmlpoke
			file="${deployerDatabaseManagerConfig}"
			xpath="${app.settings.path}/add[@key='Database']/@value"
			value="TarantinoDeployer" />

		<xmlpoke
			file="${deployerDatabaseManagerConfig}"
			xpath="${app.settings.path}/add[@key='Username']/@value"
			value="" />

		<xmlpoke
			file="${deployerDatabaseManagerConfig}"
			xpath="${app.settings.path}/add[@key='Password']/@value"
			value="" />

		<xmlpoke
			file="${deployerDatabaseManagerConfig}"
			xpath="${app.settings.path}/add[@key='IntegratedSecurity']/@value"
			value="true" />

		<xmlpoke
			file="${deployerDatabaseManagerConfig}"
			xpath="${app.settings.path}/add[@key='ScriptFolder']/@value"
			value="." />

		<xmlpoke
			file="${deployerDatabaseManagerConfig}"
			xpath="${app.settings.path}/add[@key='NAntFolder']/@value"
			value="..\NAnt" />

		<exec program="${svn.exe}" workingdir="." commandline="up LatestVersion ${svn.args}" verbose="true" />

		<property name="zipFile" value="LatestVersion/${project}.zip"/>

		<delete file="${zipFile}" failonerror="false" />

		<zip zipfile="${zipFile}" includeemptydirs="true" >
			<fileset basedir="${package.dir}">
				<include name="**" />
			</fileset>
		</zip>

		<exec program="${svn.exe}" workingdir="." commandline="ci LatestVersion ${svn.args} -m&quot;automatic check-in ${project.fullversion}&quot;" verbose="true"  />

	</target>

	<!-- Database change management -->
	<property name="database.script.directory" value="src\Tarantino.Deployer.Database" overwrite="false" />
	<property name="database.server" value="." overwrite="false"/>
	<property name="database.name" value="TarantinoDeployer" overwrite="false"/>
	<property name="database.integrated" value="true" overwrite="false" />
	<property name="database.username" value="sa" overwrite="false"/>
	<property name="database.password" value="pwd" overwrite="false"/>
	<property name="action" value="Update" overwrite="false"/>

	<target name="updateDatabase">
		<property name="action" value="Update" />
		<call target="manageDatabase" />
	</target>

	<target name="rebuildAllDatabases" depends="rebuildCommonsDatabase, rebuildDeployerDatabase" />

	<target name="rebuildCommonsDatabase">
		<property name="database.name" value="TarantinoCommons" />
		<property name="database.script.directory" value="src\Tarantino.Commons.Database" />
		<call target="rebuildDatabase" />
	</target>

	<target name="rebuildDeployerDatabase">
		<property name="database.name" value="TarantinoDeployer" />
		<property name="database.script.directory" value="src\Tarantino.Deployer.Database" />
		<call target="rebuildDatabase" />
	</target>

	<target name="rebuildDatabase">
		<property name="action" value="Rebuild" />
		<call target="manageDatabase" />
	</target>

	<target name="createDatabase">
		<property name="action" value="Create" />
		<call target="manageDatabase" />
	</target>

	<target name="dropDatabase">
		<property name="action" value="Drop" />
		<call target="manageDatabase" />
	</target>

	<target name="manageDatabase">
		<manageDatabase
			scriptDirectory="${database.script.directory}"
			action="${action}"
			server="${database.server}"
			integratedAuthentication="${database.integrated}"
			database="${database.name}"
			username="${database.username}"
			password="${database.password}"
		/>

		<if test="${action != 'Drop'}">
			<echo message="Current Database Version: ${usdDatabaseVersion}" />
		</if>

	</target>

</project>